---
import cv from '../data/cv.json';
import '../styles/global.css';

const isVisible = (section) => section?.visible !== false;
---

<head>
  <meta charset="UTF-8" />
  <title>{cv.basics.name} - {cv.basics.headline}</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="icon" type="image/svg+xml" href="./favicon.svg" />
  <script src="https://unpkg.com/phosphor-icons"></script>
</head>

<div id="cvPage" class="max-w-[794px] mx-auto rounded-lg shadow overflow-hidden">
  <header class="relative p-8 pb-0 text-white rounded-t-lg">
    <div class="absolute inset-x-0 top-0 h-3/5 w-full bg-[var(--color-primary)]"></div>
    <div class="p-custom relative block sm:grid sm:grid-cols-3 sm:space-x-4 pb-0">
      
      <!-- Photo de profil locale -->
      <img src="./images/profile.jpg" alt={`Profil de ${cv.basics.name}`} class="hidden sm:block rounded-full w-40 h-40 object-cover" />
      
      <div class="relative z-10 sm:col-span-2 text-background">
        <div class="space-y-0.5">
          <h2 class="text-3xl font-bold">{cv.basics.name}</h2>
          <h2 class="text-xl font-bold">{cv.basics.headline}</h2>
        </div>

        <div class="sm:col-span-2 sm:col-start-2 mt-10 text-foreground">
          <div class="flex flex-wrap items-center gap-x-3 gap-y-1 text-sm" style="color: var(--color-link);">
            {cv.basics.location && (
              <div class="flex items-center gap-x-1">
                <i class="ph-map-pin"></i>
                <div>{cv.basics.location}</div>
              </div>
            )}
            {cv.basics.phone && (
              <div class="flex items-center gap-x-1">
                <i class="ph-phone"></i>
                <a href={`tel:${cv.basics.phone}`} class="hover:underline">{cv.basics.phone}</a>
              </div>
            )}
            {cv.basics.email && (
              <div class="flex items-center gap-x-1">
                <i class="ph-envelope"></i>
                <a href={`mailto:${cv.basics.email}`} class="hover:underline">{cv.basics.email}</a>
              </div>
            )}
            {cv.basics.customFields?.map(field => (
              <div class="flex items-center gap-x-1">
                <i class={`ph-${field.icon}`}></i>
                <div>{field.value}</div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  </header>
  
  <main class="p-8 pt-0 grid grid-cols-1 md:grid-cols-3 gap-8">
  
    <aside class="sidebar p-custom group space-y-4">
      {isVisible(cv.sections.profiles) && (
        <section id="profiles" class="section">
          <h3 class="section-title">Profils</h3>
          <ul class="space-y-2">
            {cv.sections.profiles.items.filter(p => p.visible).map(profile => (
              <li class="flex items-center gap-2">
                <i class={`ph ph-${profile.icon} text-xl`}></i>
                <a href={profile.url.href} target="_blank" class="hover:underline">{profile.username}</a>
              </li>
            ))}
          </ul>
        </section>
      )}
  
      {isVisible(cv.sections.skills) && (
        <section id="skills" class="section">
          <h3 class="section-title">CompÃ©tences</h3>
          <div class="grid gap-x-6 gap-y-3">
            {cv.sections.skills.items.filter(s => s.visible).map(skill => (
              <div class="space-y-2 pl-4">
                <strong>{skill.name}</strong>
                <p class="pl-8 text-sm">{skill.keywords.join(', ')}</p>
              </div>
            ))}
          </div>
        </section>
      )}
  
      {isVisible(cv.sections.interests) && (
        <section id="interests" class="section">
          <h3 class="section-title">Centres d'intÃ©rÃªt</h3>
          <div class="grid gap-x-6 gap-y-3">
            {cv.sections.interests.items.filter(i => i.visible).map(interest => (
              <div class="space-y-2 pl-4">
                <strong>{interest.name}</strong>
                <p class="pl-8 text-sm">{interest.keywords.join(', ')}</p>
              </div>
            ))}
          </div>
        </section>
      )}
  
      {isVisible(cv.sections.certifications) && (
        <section id="certifications" class="section">
          <h3 class="section-title">Certifications</h3>
          {cv.sections.certifications.items.filter(c => c.visible).map(certif => (
            <div class="list-disc list-inside text-sm ml-4">
              <strong>{certif.name}</strong> â€” {certif.issuer}<br />
              <small class="text-gray-500">{certif.date}</small>
            </div>
          ))}
        </section>
      )}
  
      {isVisible(cv.sections.languages) && (
        <section id="languages" class="section">
          <h3 class="section-title">Langues</h3>
          {cv.sections.languages.items.filter(l => l.visible).map(lang => (
            <div class="list-disc list-inside text-sm ml-4">
              <strong>{lang.name}</strong> â€” {lang.description}
            </div>
          ))}
        </section>
      )}

      {isVisible(cv.sections.references) && (
        <section id="references" class="section w-full max-w-2xl">
          <h2 class="section-title">RÃ©fÃ©rences</h2>
          {cv.sections.references.items.filter(r => r.visible).map(ref => (
            <p class="text-sm"><strong>{ref.name}</strong> â€” {ref.description}</p>
          ))}
        </section>
      )}
    </aside>
  
    <section class="main p-custom group space-y-4 col-span-2">
  
      {isVisible(cv.sections.summary) && (
        <section id="summary" class="section w-full max-w-2xl">
          <h2 class="section-title">Ã€ propos</h2>
          <div class="text-sm" set:html={cv.sections.summary.content}></div>
        </section>
      )}
  
      {isVisible(cv.sections.experience) && (
        <section id="experience" class="section w-full max-w-2xl">
          <h2 class="section-title">ExpÃ©rience professionnelle</h2>
          {cv.sections.experience.items.filter(e => e.visible).map(exp => (
            <div class="mb-8">
              <h3 class="text-xl font-semibold">{exp.position} â€” {exp.company}</h3>
              <p class="text-sm text-gray-500"><em>{exp.date} | {exp.location}</em></p>
              <div class="text-sm mt-2" set:html={exp.summary}></div>
            </div>
          ))}
        </section>
      )}
  
      {isVisible(cv.sections.education) && (
        <section id="education" class="section w-full max-w-2xl">
          <h2 class="section-title">DiplÃ´mes et formations</h2>
          {cv.sections.education.items.filter(e => e.visible).map(edu => (
            <div class="mb-8">
              <h3 class="text-xl font-semibold">{edu.institution}</h3>
              <p class="text-sm text-gray-500"><em>{edu.studyType} â€” {edu.area} ({edu.date})</em></p>
              <div class="text-sm mt-2" set:html={edu.summary}></div>
            </div>
          ))}
        </section>
      )}
    </section>
  </main>
</div>

<footer class="bg-[var(--color-background)] dark:bg-gray-900 mt-8 py-6 border-t border-gray-200 dark:border-gray-700">
  <div class="max-w-[794px] mx-auto flex flex-col md:flex-row items-center justify-between gap-4 px-4">
    <div class="text-sm text-gray-500 dark:text-gray-400">
      Â© {new Date().getFullYear()} {cv.basics.name}. Tous droits rÃ©servÃ©s.
    </div>
    <div class="flex flex-col sm:flex-row gap-3">
      <button
        class="bg-white text-black dark:bg-gray-700 dark:text-white py-2 px-4 rounded-full shadow hover:bg-gray-200 dark:hover:bg-gray-600 transition"
        onclick="document.body.classList.toggle('dark')"
      >ðŸŒ— Mode</button>
      <a
        href="./cv.pdf"
        target="_blank"
        class="bg-[var(--color-primary)] text-white py-2 px-4 rounded-full shadow hover:bg-opacity-90 transition"
      >ðŸ“„ TÃ©lÃ©charger CV</a>
    </div>
  </div>
</footer>
