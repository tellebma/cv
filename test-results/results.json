{
  "config": {
    "configFile": "/home/tellebma/DEV/cv/playwright.config.ts",
    "rootDir": "/home/tellebma/DEV/cv/tests",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": "/home/tellebma/DEV/cv/tests/global-setup.ts",
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 6
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "html",
        null
      ],
      [
        "json",
        {
          "outputFile": "test-results/results.json"
        }
      ],
      [
        "list",
        null
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/home/tellebma/DEV/cv/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 6
        },
        "id": "chromium",
        "name": "chromium",
        "testDir": "/home/tellebma/DEV/cv/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/home/tellebma/DEV/cv/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 6
        },
        "id": "firefox",
        "name": "firefox",
        "testDir": "/home/tellebma/DEV/cv/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/home/tellebma/DEV/cv/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 6
        },
        "id": "webkit",
        "name": "webkit",
        "testDir": "/home/tellebma/DEV/cv/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/home/tellebma/DEV/cv/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 6
        },
        "id": "Mobile Chrome",
        "name": "Mobile Chrome",
        "testDir": "/home/tellebma/DEV/cv/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/home/tellebma/DEV/cv/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 6
        },
        "id": "Mobile Safari",
        "name": "Mobile Safari",
        "testDir": "/home/tellebma/DEV/cv/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/home/tellebma/DEV/cv/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 6
        },
        "id": "Tablet",
        "name": "Tablet",
        "testDir": "/home/tellebma/DEV/cv/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.53.2",
    "workers": 6,
    "webServer": {
      "command": "npm run dev",
      "url": "http://localhost:4321",
      "reuseExistingServer": true,
      "timeout": 120000
    }
  },
  "suites": [
    {
      "title": "cv.spec.ts",
      "file": "cv.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "CV - Maxime BELLET",
          "file": "cv.spec.ts",
          "line": 3,
          "column": 6,
          "specs": [
            {
              "title": "should load the main page correctly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 639,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:37.004Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-2f58d44ab3bc3e0814ae",
              "file": "cv.spec.ts",
              "line": 8,
              "column": 3
            },
            {
              "title": "should display contact information",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 1,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 922,
                      "error": {
                        "message": "Error: expect.toBeVisible: Error: strict mode violation: getByText('Lyon') resolved to 5 elements:\n    1) <span data-astro-source-loc=\"297:23\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('banner').getByText('Lyon')\n    2) <p>Ingénieur diplômé de CPE Lyon en Informatique et …</p> aka getByText('Ingénieur diplômé de CPE Lyon')\n    3) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('article').filter({ hasText: 'Intégrateur Applicatif' }).locator('span')\n    4) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('paragraph').filter({ hasText: '- 2023 | Lyon' }).locator('span')\n    5) <h3 data-astro-source-loc=\"442:79\" class=\"text-lg font-semibold text-[var(--color-primary)]\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">CPE Lyon</h3> aka getByRole('heading', { name: 'CPE Lyon' })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByText('Lyon')\u001b[22m\n",
                        "stack": "Error: expect.toBeVisible: Error: strict mode violation: getByText('Lyon') resolved to 5 elements:\n    1) <span data-astro-source-loc=\"297:23\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('banner').getByText('Lyon')\n    2) <p>Ingénieur diplômé de CPE Lyon en Informatique et …</p> aka getByText('Ingénieur diplômé de CPE Lyon')\n    3) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('article').filter({ hasText: 'Intégrateur Applicatif' }).locator('span')\n    4) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('paragraph').filter({ hasText: '- 2023 | Lyon' }).locator('span')\n    5) <h3 data-astro-source-loc=\"442:79\" class=\"text-lg font-semibold text-[var(--color-primary)]\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">CPE Lyon</h3> aka getByRole('heading', { name: 'CPE Lyon' })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByText('Lyon')\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:27:42",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 42,
                          "line": 27
                        },
                        "snippet": "  25 |     \n  26 |     // Check location\n> 27 |     await expect(page.getByText('Lyon')).toBeVisible();\n     |                                          ^\n  28 |   });\n  29 |\n  30 |   test('should display all sections when visible', async ({ page }) => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 42,
                            "line": 27
                          },
                          "message": "Error: expect.toBeVisible: Error: strict mode violation: getByText('Lyon') resolved to 5 elements:\n    1) <span data-astro-source-loc=\"297:23\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('banner').getByText('Lyon')\n    2) <p>Ingénieur diplômé de CPE Lyon en Informatique et …</p> aka getByText('Ingénieur diplômé de CPE Lyon')\n    3) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('article').filter({ hasText: 'Intégrateur Applicatif' }).locator('span')\n    4) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('paragraph').filter({ hasText: '- 2023 | Lyon' }).locator('span')\n    5) <h3 data-astro-source-loc=\"442:79\" class=\"text-lg font-semibold text-[var(--color-primary)]\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">CPE Lyon</h3> aka getByRole('heading', { name: 'CPE Lyon' })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByText('Lyon')\u001b[22m\n\n\n  25 |     \n  26 |     // Check location\n> 27 |     await expect(page.getByText('Lyon')).toBeVisible();\n     |                                          ^\n  28 |   });\n  29 |\n  30 |   test('should display all sections when visible', async ({ page }) => {\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:27:42"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:37.100Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-display-contact-information-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-display-contact-information-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-display-contact-information-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 42,
                        "line": 27
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-f0939b9edb683f2ed6dc",
              "file": "cv.spec.ts",
              "line": 19,
              "column": 3
            },
            {
              "title": "should display all sections when visible",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 598,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:37.093Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-52eda95ba89d24991ded",
              "file": "cv.spec.ts",
              "line": 30,
              "column": 3
            },
            {
              "title": "should have working dark mode toggle",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 11130,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('button', { name: /Mode/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('button', { name: /Mode/ })\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('button', { name: /Mode/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('button', { name: /Mode/ })\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:41:31",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 31,
                          "line": 41
                        },
                        "snippet": "  39 |   test('should have working dark mode toggle', async ({ page }) => {\n  40 |     const themeButton = page.getByRole('button', { name: /Mode/ });\n> 41 |     await expect(themeButton).toBeVisible();\n     |                               ^\n  42 |     \n  43 |     // Check initial state (should be light mode)\n  44 |     const body = page.locator('body');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 31,
                            "line": 41
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('button', { name: /Mode/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('button', { name: /Mode/ })\u001b[22m\n\n\n  39 |   test('should have working dark mode toggle', async ({ page }) => {\n  40 |     const themeButton = page.getByRole('button', { name: /Mode/ });\n> 41 |     await expect(themeButton).toBeVisible();\n     |                               ^\n  42 |     \n  43 |     // Check initial state (should be light mode)\n  44 |     const body = page.locator('body');\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:41:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:37.086Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-dark-mode-toggle-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-dark-mode-toggle-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-dark-mode-toggle-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 31,
                        "line": 41
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-2af8fbae5265f8d4b3da",
              "file": "cv.spec.ts",
              "line": 39,
              "column": 3
            },
            {
              "title": "should have working CV download link",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 4,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 11297,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('link', { name: /Télécharger CV/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('link', { name: /Télécharger CV/ })\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('link', { name: /Télécharger CV/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('link', { name: /Télécharger CV/ })\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:58:32",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 32,
                          "line": 58
                        },
                        "snippet": "  56 |   test('should have working CV download link', async ({ page }) => {\n  57 |     const downloadLink = page.getByRole('link', { name: /Télécharger CV/ });\n> 58 |     await expect(downloadLink).toBeVisible();\n     |                                ^\n  59 |     await expect(downloadLink).toHaveAttribute('href', './cv.pdf');\n  60 |     await expect(downloadLink).toHaveAttribute('target', '_blank');\n  61 |   });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 32,
                            "line": 58
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('link', { name: /Télécharger CV/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('link', { name: /Télécharger CV/ })\u001b[22m\n\n\n  56 |   test('should have working CV download link', async ({ page }) => {\n  57 |     const downloadLink = page.getByRole('link', { name: /Télécharger CV/ });\n> 58 |     await expect(downloadLink).toBeVisible();\n     |                                ^\n  59 |     await expect(downloadLink).toHaveAttribute('href', './cv.pdf');\n  60 |     await expect(downloadLink).toHaveAttribute('target', '_blank');\n  61 |   });\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:58:32"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:37.136Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-CV-download-link-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-CV-download-link-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-CV-download-link-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 32,
                        "line": 58
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-9198144847fc087fcba3",
              "file": "cv.spec.ts",
              "line": 56,
              "column": 3
            },
            {
              "title": "should display profile image",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 5,
                      "parallelIndex": 5,
                      "status": "passed",
                      "duration": 582,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:37.091Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-b130373e41e76be5ea9a",
              "file": "cv.spec.ts",
              "line": 63,
              "column": 3
            },
            {
              "title": "should have proper accessibility features",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 599,
                      "error": {
                        "message": "Error: expect: Property 'toBeInDOM' not found.",
                        "stack": "Error: expect: Property 'toBeInDOM' not found.\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:78:27",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 27,
                          "line": 78
                        },
                        "snippet": "  76 |     // Check skip link\n  77 |     const skipLink = page.getByRole('link', { name: 'Aller au contenu principal' });\n> 78 |     await expect(skipLink).toBeInDOM();\n     |                           ^\n  79 |     \n  80 |     // Check main landmark\n  81 |     await expect(page.getByRole('main')).toBeVisible();"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 27,
                            "line": 78
                          },
                          "message": "Error: expect: Property 'toBeInDOM' not found.\n\n  76 |     // Check skip link\n  77 |     const skipLink = page.getByRole('link', { name: 'Aller au contenu principal' });\n> 78 |     await expect(skipLink).toBeInDOM();\n     |                           ^\n  79 |     \n  80 |     // Check main landmark\n  81 |     await expect(page.getByRole('main')).toBeVisible();\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:78:27"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:37.729Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-shou-72a6c-oper-accessibility-features-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-shou-72a6c-oper-accessibility-features-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-shou-72a6c-oper-accessibility-features-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 27,
                        "line": 78
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-6788252e4c05b95f2433",
              "file": "cv.spec.ts",
              "line": 75,
              "column": 3
            },
            {
              "title": "should be responsive",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 5,
                      "parallelIndex": 5,
                      "status": "passed",
                      "duration": 582,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:37.764Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-77fa21b7aa6249f8c9fd",
              "file": "cv.spec.ts",
              "line": 89,
              "column": 3
            },
            {
              "title": "should have working external links",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 600,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:37.792Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-3a9b4ba612bf8530add2",
              "file": "cv.spec.ts",
              "line": 103,
              "column": 3
            },
            {
              "title": "should load performance assets",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 6,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 323,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:124:20",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 20,
                          "line": 124
                        },
                        "snippet": "  122 |       return link ? true : false;\n  123 |     });\n> 124 |     expect(styles).toBeTruthy();\n      |                    ^\n  125 |     \n  126 |     // Check that images have proper attributes\n  127 |     const images = page.locator('img');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 20,
                            "line": 124
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  122 |       return link ? true : false;\n  123 |     });\n> 124 |     expect(styles).toBeTruthy();\n      |                    ^\n  125 |     \n  126 |     // Check that images have proper attributes\n  127 |     const images = page.locator('img');\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:124:20"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:38.752Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-load-performance-assets-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-load-performance-assets-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-load-performance-assets-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 20,
                        "line": 124
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-8fc1b4f744ef62b7cd55",
              "file": "cv.spec.ts",
              "line": 118,
              "column": 3
            },
            {
              "title": "should load the main page correctly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 8,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 1559,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:39.203Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-81b5d212d37f49225ae9",
              "file": "cv.spec.ts",
              "line": 8,
              "column": 3
            },
            {
              "title": "should display contact information",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 9,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 1831,
                      "error": {
                        "message": "Error: expect.toBeVisible: Error: strict mode violation: getByText('Lyon') resolved to 5 elements:\n    1) <span>Lyon</span> aka getByRole('banner').getByText('Lyon')\n    2) <p>Ingénieur diplômé de CPE Lyon en Informatique et …</p> aka getByText('Ingénieur diplômé de CPE Lyon')\n    3) <span>Lyon</span> aka getByRole('article').filter({ hasText: 'Intégrateur Applicatif' }).locator('span')\n    4) <span>Lyon</span> aka getByRole('paragraph').filter({ hasText: '- 2023 | Lyon' }).locator('span')\n    5) <h3 class=\"text-lg font-semibold text-[var(--color-primary)]\">CPE Lyon</h3> aka getByRole('heading', { name: 'CPE Lyon' })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByText('Lyon')\u001b[22m\n",
                        "stack": "Error: expect.toBeVisible: Error: strict mode violation: getByText('Lyon') resolved to 5 elements:\n    1) <span>Lyon</span> aka getByRole('banner').getByText('Lyon')\n    2) <p>Ingénieur diplômé de CPE Lyon en Informatique et …</p> aka getByText('Ingénieur diplômé de CPE Lyon')\n    3) <span>Lyon</span> aka getByRole('article').filter({ hasText: 'Intégrateur Applicatif' }).locator('span')\n    4) <span>Lyon</span> aka getByRole('paragraph').filter({ hasText: '- 2023 | Lyon' }).locator('span')\n    5) <h3 class=\"text-lg font-semibold text-[var(--color-primary)]\">CPE Lyon</h3> aka getByRole('heading', { name: 'CPE Lyon' })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByText('Lyon')\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:27:42",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 42,
                          "line": 27
                        },
                        "snippet": "  25 |     \n  26 |     // Check location\n> 27 |     await expect(page.getByText('Lyon')).toBeVisible();\n     |                                          ^\n  28 |   });\n  29 |\n  30 |   test('should display all sections when visible', async ({ page }) => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 42,
                            "line": 27
                          },
                          "message": "Error: expect.toBeVisible: Error: strict mode violation: getByText('Lyon') resolved to 5 elements:\n    1) <span>Lyon</span> aka getByRole('banner').getByText('Lyon')\n    2) <p>Ingénieur diplômé de CPE Lyon en Informatique et …</p> aka getByText('Ingénieur diplômé de CPE Lyon')\n    3) <span>Lyon</span> aka getByRole('article').filter({ hasText: 'Intégrateur Applicatif' }).locator('span')\n    4) <span>Lyon</span> aka getByRole('paragraph').filter({ hasText: '- 2023 | Lyon' }).locator('span')\n    5) <h3 class=\"text-lg font-semibold text-[var(--color-primary)]\">CPE Lyon</h3> aka getByRole('heading', { name: 'CPE Lyon' })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByText('Lyon')\u001b[22m\n\n\n  25 |     \n  26 |     // Check location\n> 27 |     await expect(page.getByText('Lyon')).toBeVisible();\n     |                                          ^\n  28 |   });\n  29 |\n  30 |   test('should display all sections when visible', async ({ page }) => {\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:27:42"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:39.634Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-display-contact-information-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-display-contact-information-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-display-contact-information-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 42,
                        "line": 27
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-7d156ac648b171e8b5a7",
              "file": "cv.spec.ts",
              "line": 19,
              "column": 3
            },
            {
              "title": "should display all sections when visible",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 10,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 1749,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:39.796Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-7c6db8edede3337dc19f",
              "file": "cv.spec.ts",
              "line": 30,
              "column": 3
            },
            {
              "title": "should have working dark mode toggle",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 8,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 10616,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('button', { name: /Mode/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('button', { name: /Mode/ })\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('button', { name: /Mode/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('button', { name: /Mode/ })\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:41:31",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 31,
                          "line": 41
                        },
                        "snippet": "  39 |   test('should have working dark mode toggle', async ({ page }) => {\n  40 |     const themeButton = page.getByRole('button', { name: /Mode/ });\n> 41 |     await expect(themeButton).toBeVisible();\n     |                               ^\n  42 |     \n  43 |     // Check initial state (should be light mode)\n  44 |     const body = page.locator('body');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 31,
                            "line": 41
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('button', { name: /Mode/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('button', { name: /Mode/ })\u001b[22m\n\n\n  39 |   test('should have working dark mode toggle', async ({ page }) => {\n  40 |     const themeButton = page.getByRole('button', { name: /Mode/ });\n> 41 |     await expect(themeButton).toBeVisible();\n     |                               ^\n  42 |     \n  43 |     // Check initial state (should be light mode)\n  44 |     const body = page.locator('body');\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:41:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:41.447Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-dark-mode-toggle-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-dark-mode-toggle-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-dark-mode-toggle-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 31,
                        "line": 41
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-55af02a291bedc28311c",
              "file": "cv.spec.ts",
              "line": 39,
              "column": 3
            },
            {
              "title": "should have working CV download link",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 10,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 10565,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('link', { name: /Télécharger CV/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('link', { name: /Télécharger CV/ })\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('link', { name: /Télécharger CV/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('link', { name: /Télécharger CV/ })\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:58:32",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 32,
                          "line": 58
                        },
                        "snippet": "  56 |   test('should have working CV download link', async ({ page }) => {\n  57 |     const downloadLink = page.getByRole('link', { name: /Télécharger CV/ });\n> 58 |     await expect(downloadLink).toBeVisible();\n     |                                ^\n  59 |     await expect(downloadLink).toHaveAttribute('href', './cv.pdf');\n  60 |     await expect(downloadLink).toHaveAttribute('target', '_blank');\n  61 |   });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 32,
                            "line": 58
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('link', { name: /Télécharger CV/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('link', { name: /Télécharger CV/ })\u001b[22m\n\n\n  56 |   test('should have working CV download link', async ({ page }) => {\n  57 |     const downloadLink = page.getByRole('link', { name: /Télécharger CV/ });\n> 58 |     await expect(downloadLink).toBeVisible();\n     |                                ^\n  59 |     await expect(downloadLink).toHaveAttribute('href', './cv.pdf');\n  60 |     await expect(downloadLink).toHaveAttribute('target', '_blank');\n  61 |   });\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:58:32"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:42.090Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-CV-download-link-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-CV-download-link-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-CV-download-link-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 32,
                        "line": 58
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-e7dc68f7fd0aaf6f54fe",
              "file": "cv.spec.ts",
              "line": 56,
              "column": 3
            },
            {
              "title": "should display profile image",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 11,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 1281,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:43.616Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-a2e22906cd4e8954b1d8",
              "file": "cv.spec.ts",
              "line": 63,
              "column": 3
            },
            {
              "title": "should have proper accessibility features",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 11,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 540,
                      "error": {
                        "message": "Error: expect: Property 'toBeInDOM' not found.",
                        "stack": "Error: expect: Property 'toBeInDOM' not found.\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:78:27",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 27,
                          "line": 78
                        },
                        "snippet": "  76 |     // Check skip link\n  77 |     const skipLink = page.getByRole('link', { name: 'Aller au contenu principal' });\n> 78 |     await expect(skipLink).toBeInDOM();\n     |                           ^\n  79 |     \n  80 |     // Check main landmark\n  81 |     await expect(page.getByRole('main')).toBeVisible();"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 27,
                            "line": 78
                          },
                          "message": "Error: expect: Property 'toBeInDOM' not found.\n\n  76 |     // Check skip link\n  77 |     const skipLink = page.getByRole('link', { name: 'Aller au contenu principal' });\n> 78 |     await expect(skipLink).toBeInDOM();\n     |                           ^\n  79 |     \n  80 |     // Check main landmark\n  81 |     await expect(page.getByRole('main')).toBeVisible();\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:78:27"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:45.325Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-shou-72a6c-oper-accessibility-features-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-shou-72a6c-oper-accessibility-features-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-shou-72a6c-oper-accessibility-features-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 27,
                        "line": 78
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-73c2d2d539552db423ea",
              "file": "cv.spec.ts",
              "line": 75,
              "column": 3
            },
            {
              "title": "should be responsive",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 12,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 1575,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:46.742Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-fc558fa3e37be384fac1",
              "file": "cv.spec.ts",
              "line": 89,
              "column": 3
            },
            {
              "title": "should have working external links",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 13,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 1808,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:48.864Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-db5ab1914b44ad4a7c3a",
              "file": "cv.spec.ts",
              "line": 103,
              "column": 3
            },
            {
              "title": "should load performance assets",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 14,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 1726,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:124:20",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 20,
                          "line": 124
                        },
                        "snippet": "  122 |       return link ? true : false;\n  123 |     });\n> 124 |     expect(styles).toBeTruthy();\n      |                    ^\n  125 |     \n  126 |     // Check that images have proper attributes\n  127 |     const images = page.locator('img');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 20,
                            "line": 124
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  122 |       return link ? true : false;\n  123 |     });\n> 124 |     expect(styles).toBeTruthy();\n      |                    ^\n  125 |     \n  126 |     // Check that images have proper attributes\n  127 |     const images = page.locator('img');\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:124:20"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:49.083Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-load-performance-assets-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-load-performance-assets-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-load-performance-assets-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 20,
                        "line": 124
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-0c89a0bdad0d81030d42",
              "file": "cv.spec.ts",
              "line": 118,
              "column": 3
            },
            {
              "title": "should load the main page correctly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 17,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 1478,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:53.038Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-5fef37b0898f539213f8",
              "file": "cv.spec.ts",
              "line": 8,
              "column": 3
            },
            {
              "title": "should display contact information",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 19,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 1004,
                      "error": {
                        "message": "Error: expect.toBeVisible: Error: strict mode violation: getByText('Lyon') resolved to 5 elements:\n    1) <span data-astro-source-loc=\"297:23\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('banner').getByText('Lyon')\n    2) <p>Ingénieur diplômé de CPE Lyon en Informatique et …</p> aka getByText('Ingénieur diplômé de CPE Lyon')\n    3) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('article').filter({ hasText: 'Intégrateur Applicatif' }).locator('span')\n    4) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('paragraph').filter({ hasText: '- 2023 | Lyon' }).locator('span')\n    5) <h3 data-astro-source-loc=\"442:79\" class=\"text-lg font-semibold text-[var(--color-primary)]\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">CPE Lyon</h3> aka getByRole('heading', { name: 'CPE Lyon' })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByText('Lyon')\u001b[22m\n",
                        "stack": "Error: expect.toBeVisible: Error: strict mode violation: getByText('Lyon') resolved to 5 elements:\n    1) <span data-astro-source-loc=\"297:23\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('banner').getByText('Lyon')\n    2) <p>Ingénieur diplômé de CPE Lyon en Informatique et …</p> aka getByText('Ingénieur diplômé de CPE Lyon')\n    3) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('article').filter({ hasText: 'Intégrateur Applicatif' }).locator('span')\n    4) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('paragraph').filter({ hasText: '- 2023 | Lyon' }).locator('span')\n    5) <h3 data-astro-source-loc=\"442:79\" class=\"text-lg font-semibold text-[var(--color-primary)]\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">CPE Lyon</h3> aka getByRole('heading', { name: 'CPE Lyon' })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByText('Lyon')\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:27:42",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 42,
                          "line": 27
                        },
                        "snippet": "  25 |     \n  26 |     // Check location\n> 27 |     await expect(page.getByText('Lyon')).toBeVisible();\n     |                                          ^\n  28 |   });\n  29 |\n  30 |   test('should display all sections when visible', async ({ page }) => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 42,
                            "line": 27
                          },
                          "message": "Error: expect.toBeVisible: Error: strict mode violation: getByText('Lyon') resolved to 5 elements:\n    1) <span data-astro-source-loc=\"297:23\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('banner').getByText('Lyon')\n    2) <p>Ingénieur diplômé de CPE Lyon en Informatique et …</p> aka getByText('Ingénieur diplômé de CPE Lyon')\n    3) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('article').filter({ hasText: 'Intégrateur Applicatif' }).locator('span')\n    4) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('paragraph').filter({ hasText: '- 2023 | Lyon' }).locator('span')\n    5) <h3 data-astro-source-loc=\"442:79\" class=\"text-lg font-semibold text-[var(--color-primary)]\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">CPE Lyon</h3> aka getByRole('heading', { name: 'CPE Lyon' })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByText('Lyon')\u001b[22m\n\n\n  25 |     \n  26 |     // Check location\n> 27 |     await expect(page.getByText('Lyon')).toBeVisible();\n     |                                          ^\n  28 |   });\n  29 |\n  30 |   test('should display all sections when visible', async ({ page }) => {\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:27:42"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:53.183Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-display-contact-information-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-display-contact-information-webkit/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-display-contact-information-webkit/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 42,
                        "line": 27
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-0fce50035753146b7ee0",
              "file": "cv.spec.ts",
              "line": 19,
              "column": 3
            },
            {
              "title": "should display all sections when visible",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 16,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 1682,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:52.728Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-1ebc11d1dbe6a400785b",
              "file": "cv.spec.ts",
              "line": 30,
              "column": 3
            },
            {
              "title": "should have working dark mode toggle",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 18,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 12061,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('button', { name: /Mode/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('button', { name: /Mode/ })\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('button', { name: /Mode/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('button', { name: /Mode/ })\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:41:31",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 31,
                          "line": 41
                        },
                        "snippet": "  39 |   test('should have working dark mode toggle', async ({ page }) => {\n  40 |     const themeButton = page.getByRole('button', { name: /Mode/ });\n> 41 |     await expect(themeButton).toBeVisible();\n     |                               ^\n  42 |     \n  43 |     // Check initial state (should be light mode)\n  44 |     const body = page.locator('body');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 31,
                            "line": 41
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('button', { name: /Mode/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('button', { name: /Mode/ })\u001b[22m\n\n\n  39 |   test('should have working dark mode toggle', async ({ page }) => {\n  40 |     const themeButton = page.getByRole('button', { name: /Mode/ });\n> 41 |     await expect(themeButton).toBeVisible();\n     |                               ^\n  42 |     \n  43 |     // Check initial state (should be light mode)\n  44 |     const body = page.locator('body');\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:41:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:53.010Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-dark-mode-toggle-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-dark-mode-toggle-webkit/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-dark-mode-toggle-webkit/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 31,
                        "line": 41
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-8f6dc40bb85c8c42cb03",
              "file": "cv.spec.ts",
              "line": 39,
              "column": 3
            },
            {
              "title": "should have working CV download link",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 20,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 11958,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('link', { name: /Télécharger CV/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('link', { name: /Télécharger CV/ })\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('link', { name: /Télécharger CV/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('link', { name: /Télécharger CV/ })\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:58:32",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 32,
                          "line": 58
                        },
                        "snippet": "  56 |   test('should have working CV download link', async ({ page }) => {\n  57 |     const downloadLink = page.getByRole('link', { name: /Télécharger CV/ });\n> 58 |     await expect(downloadLink).toBeVisible();\n     |                                ^\n  59 |     await expect(downloadLink).toHaveAttribute('href', './cv.pdf');\n  60 |     await expect(downloadLink).toHaveAttribute('target', '_blank');\n  61 |   });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 32,
                            "line": 58
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('link', { name: /Télécharger CV/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('link', { name: /Télécharger CV/ })\u001b[22m\n\n\n  56 |   test('should have working CV download link', async ({ page }) => {\n  57 |     const downloadLink = page.getByRole('link', { name: /Télécharger CV/ });\n> 58 |     await expect(downloadLink).toBeVisible();\n     |                                ^\n  59 |     await expect(downloadLink).toHaveAttribute('href', './cv.pdf');\n  60 |     await expect(downloadLink).toHaveAttribute('target', '_blank');\n  61 |   });\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:58:32"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:53.668Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-CV-download-link-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-CV-download-link-webkit/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-CV-download-link-webkit/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 32,
                        "line": 58
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-fecc3ab04d00cb8e697c",
              "file": "cv.spec.ts",
              "line": 56,
              "column": 3
            },
            {
              "title": "should display profile image",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 21,
                      "parallelIndex": 5,
                      "status": "passed",
                      "duration": 1072,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:56.142Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-d4a6cab21332282e4a8d",
              "file": "cv.spec.ts",
              "line": 63,
              "column": 3
            },
            {
              "title": "should have proper accessibility features",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 17,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 969,
                      "error": {
                        "message": "Error: expect: Property 'toBeInDOM' not found.",
                        "stack": "Error: expect: Property 'toBeInDOM' not found.\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:78:27",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 27,
                          "line": 78
                        },
                        "snippet": "  76 |     // Check skip link\n  77 |     const skipLink = page.getByRole('link', { name: 'Aller au contenu principal' });\n> 78 |     await expect(skipLink).toBeInDOM();\n     |                           ^\n  79 |     \n  80 |     // Check main landmark\n  81 |     await expect(page.getByRole('main')).toBeVisible();"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 27,
                            "line": 78
                          },
                          "message": "Error: expect: Property 'toBeInDOM' not found.\n\n  76 |     // Check skip link\n  77 |     const skipLink = page.getByRole('link', { name: 'Aller au contenu principal' });\n> 78 |     await expect(skipLink).toBeInDOM();\n     |                           ^\n  79 |     \n  80 |     // Check main landmark\n  81 |     await expect(page.getByRole('main')).toBeVisible();\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:78:27"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:55.607Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-shou-72a6c-oper-accessibility-features-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-shou-72a6c-oper-accessibility-features-webkit/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-shou-72a6c-oper-accessibility-features-webkit/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 27,
                        "line": 78
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-08d16c22e9b41f3d3b30",
              "file": "cv.spec.ts",
              "line": 75,
              "column": 3
            },
            {
              "title": "should be responsive",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 16,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 1280,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:55.713Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-4cc03901bf5b69b41d59",
              "file": "cv.spec.ts",
              "line": 89,
              "column": 3
            },
            {
              "title": "should have working external links",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 16,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 1092,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:56.998Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-39b763e91e385f43df42",
              "file": "cv.spec.ts",
              "line": 103,
              "column": 3
            },
            {
              "title": "should load performance assets",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 21,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 1093,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:124:20",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 20,
                          "line": 124
                        },
                        "snippet": "  122 |       return link ? true : false;\n  123 |     });\n> 124 |     expect(styles).toBeTruthy();\n      |                    ^\n  125 |     \n  126 |     // Check that images have proper attributes\n  127 |     const images = page.locator('img');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 20,
                            "line": 124
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  122 |       return link ? true : false;\n  123 |     });\n> 124 |     expect(styles).toBeTruthy();\n      |                    ^\n  125 |     \n  126 |     // Check that images have proper attributes\n  127 |     const images = page.locator('img');\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:124:20"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:57.301Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-load-performance-assets-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-load-performance-assets-webkit/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-load-performance-assets-webkit/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 20,
                        "line": 124
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-19ec24a9ec97b7f0d152",
              "file": "cv.spec.ts",
              "line": 118,
              "column": 3
            },
            {
              "title": "should load the main page correctly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 24,
                      "parallelIndex": 5,
                      "status": "passed",
                      "duration": 429,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:01.006Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-94604de25abe991ea2f5",
              "file": "cv.spec.ts",
              "line": 8,
              "column": 3
            },
            {
              "title": "should display contact information",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 25,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 408,
                      "error": {
                        "message": "Error: expect.toBeVisible: Error: strict mode violation: getByText('Lyon') resolved to 5 elements:\n    1) <span data-astro-source-loc=\"297:23\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('banner').getByText('Lyon')\n    2) <p>Ingénieur diplômé de CPE Lyon en Informatique et …</p> aka getByText('Ingénieur diplômé de CPE Lyon')\n    3) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('article').filter({ hasText: 'Intégrateur Applicatif' }).locator('span')\n    4) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('paragraph').filter({ hasText: '- 2023 | Lyon' }).locator('span')\n    5) <h3 data-astro-source-loc=\"442:79\" class=\"text-lg font-semibold text-[var(--color-primary)]\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">CPE Lyon</h3> aka getByRole('heading', { name: 'CPE Lyon' })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByText('Lyon')\u001b[22m\n",
                        "stack": "Error: expect.toBeVisible: Error: strict mode violation: getByText('Lyon') resolved to 5 elements:\n    1) <span data-astro-source-loc=\"297:23\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('banner').getByText('Lyon')\n    2) <p>Ingénieur diplômé de CPE Lyon en Informatique et …</p> aka getByText('Ingénieur diplômé de CPE Lyon')\n    3) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('article').filter({ hasText: 'Intégrateur Applicatif' }).locator('span')\n    4) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('paragraph').filter({ hasText: '- 2023 | Lyon' }).locator('span')\n    5) <h3 data-astro-source-loc=\"442:79\" class=\"text-lg font-semibold text-[var(--color-primary)]\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">CPE Lyon</h3> aka getByRole('heading', { name: 'CPE Lyon' })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByText('Lyon')\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:27:42",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 42,
                          "line": 27
                        },
                        "snippet": "  25 |     \n  26 |     // Check location\n> 27 |     await expect(page.getByText('Lyon')).toBeVisible();\n     |                                          ^\n  28 |   });\n  29 |\n  30 |   test('should display all sections when visible', async ({ page }) => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 42,
                            "line": 27
                          },
                          "message": "Error: expect.toBeVisible: Error: strict mode violation: getByText('Lyon') resolved to 5 elements:\n    1) <span data-astro-source-loc=\"297:23\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('banner').getByText('Lyon')\n    2) <p>Ingénieur diplômé de CPE Lyon en Informatique et …</p> aka getByText('Ingénieur diplômé de CPE Lyon')\n    3) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('article').filter({ hasText: 'Intégrateur Applicatif' }).locator('span')\n    4) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('paragraph').filter({ hasText: '- 2023 | Lyon' }).locator('span')\n    5) <h3 data-astro-source-loc=\"442:79\" class=\"text-lg font-semibold text-[var(--color-primary)]\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">CPE Lyon</h3> aka getByRole('heading', { name: 'CPE Lyon' })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByText('Lyon')\u001b[22m\n\n\n  25 |     \n  26 |     // Check location\n> 27 |     await expect(page.getByText('Lyon')).toBeVisible();\n     |                                          ^\n  28 |   });\n  29 |\n  30 |   test('should display all sections when visible', async ({ page }) => {\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:27:42"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:02.129Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-display-contact-information-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-display-contact-information-Mobile-Chrome/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-display-contact-information-Mobile-Chrome/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 42,
                        "line": 27
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-f15183e5f4c550fd9fcf",
              "file": "cv.spec.ts",
              "line": 19,
              "column": 3
            },
            {
              "title": "should display all sections when visible",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 24,
                      "parallelIndex": 5,
                      "status": "passed",
                      "duration": 398,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:01.482Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-7c29e8049a5691ee4382",
              "file": "cv.spec.ts",
              "line": 30,
              "column": 3
            },
            {
              "title": "should have working dark mode toggle",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 24,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 10772,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('button', { name: /Mode/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('button', { name: /Mode/ })\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('button', { name: /Mode/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('button', { name: /Mode/ })\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:41:31",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 31,
                          "line": 41
                        },
                        "snippet": "  39 |   test('should have working dark mode toggle', async ({ page }) => {\n  40 |     const themeButton = page.getByRole('button', { name: /Mode/ });\n> 41 |     await expect(themeButton).toBeVisible();\n     |                               ^\n  42 |     \n  43 |     // Check initial state (should be light mode)\n  44 |     const body = page.locator('body');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 31,
                            "line": 41
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('button', { name: /Mode/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('button', { name: /Mode/ })\u001b[22m\n\n\n  39 |   test('should have working dark mode toggle', async ({ page }) => {\n  40 |     const themeButton = page.getByRole('button', { name: /Mode/ });\n> 41 |     await expect(themeButton).toBeVisible();\n     |                               ^\n  42 |     \n  43 |     // Check initial state (should be light mode)\n  44 |     const body = page.locator('body');\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:41:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:01.883Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-dark-mode-toggle-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-dark-mode-toggle-Mobile-Chrome/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-dark-mode-toggle-Mobile-Chrome/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 31,
                        "line": 41
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-ab7987bc56aaeee97f28",
              "file": "cv.spec.ts",
              "line": 39,
              "column": 3
            },
            {
              "title": "should have working CV download link",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 26,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 10772,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('link', { name: /Télécharger CV/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('link', { name: /Télécharger CV/ })\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('link', { name: /Télécharger CV/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('link', { name: /Télécharger CV/ })\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:58:32",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 32,
                          "line": 58
                        },
                        "snippet": "  56 |   test('should have working CV download link', async ({ page }) => {\n  57 |     const downloadLink = page.getByRole('link', { name: /Télécharger CV/ });\n> 58 |     await expect(downloadLink).toBeVisible();\n     |                                ^\n  59 |     await expect(downloadLink).toHaveAttribute('href', './cv.pdf');\n  60 |     await expect(downloadLink).toHaveAttribute('target', '_blank');\n  61 |   });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 32,
                            "line": 58
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('link', { name: /Télécharger CV/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('link', { name: /Télécharger CV/ })\u001b[22m\n\n\n  56 |   test('should have working CV download link', async ({ page }) => {\n  57 |     const downloadLink = page.getByRole('link', { name: /Télécharger CV/ });\n> 58 |     await expect(downloadLink).toBeVisible();\n     |                                ^\n  59 |     await expect(downloadLink).toHaveAttribute('href', './cv.pdf');\n  60 |     await expect(downloadLink).toHaveAttribute('target', '_blank');\n  61 |   });\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:58:32"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:02.993Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-CV-download-link-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-CV-download-link-Mobile-Chrome/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-CV-download-link-Mobile-Chrome/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 32,
                        "line": 58
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-f65f783548d2a2ad696d",
              "file": "cv.spec.ts",
              "line": 56,
              "column": 3
            },
            {
              "title": "should display profile image",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 27,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 10769,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('picture.hidden.sm\\\\:block img')\nExpected: visible\nReceived: hidden\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('picture.hidden.sm\\\\:block img')\u001b[22m\n\u001b[2m    2 × locator resolved to <img width=\"120\" height=\"120\" loading=\"eager\" src=\"./images/profile.jpg\" data-astro-source-loc=\"263:10\" alt=\"Photo de profil de Maxime BELLET, Ingénieur DevSecOps SRE\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\" class=\"rounded-full w-30 h-30 object-cover transition-transform duration-300 hover:scale-105\"/>\u001b[22m\n\u001b[2m      - unexpected value \"hidden\"\u001b[22m\n\u001b[2m    12 × locator resolved to <img width=\"120\" height=\"120\" loading=\"eager\" src=\"./images/profile.jpg\" alt=\"Photo de profil de Maxime BELLET, Ingénieur DevSecOps SRE\" class=\"rounded-full w-30 h-30 object-cover transition-transform duration-300 hover:scale-105\"/>\u001b[22m\n\u001b[2m       - unexpected value \"hidden\"\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('picture.hidden.sm\\\\:block img')\nExpected: visible\nReceived: hidden\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('picture.hidden.sm\\\\:block img')\u001b[22m\n\u001b[2m    2 × locator resolved to <img width=\"120\" height=\"120\" loading=\"eager\" src=\"./images/profile.jpg\" data-astro-source-loc=\"263:10\" alt=\"Photo de profil de Maxime BELLET, Ingénieur DevSecOps SRE\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\" class=\"rounded-full w-30 h-30 object-cover transition-transform duration-300 hover:scale-105\"/>\u001b[22m\n\u001b[2m      - unexpected value \"hidden\"\u001b[22m\n\u001b[2m    12 × locator resolved to <img width=\"120\" height=\"120\" loading=\"eager\" src=\"./images/profile.jpg\" alt=\"Photo de profil de Maxime BELLET, Ingénieur DevSecOps SRE\" class=\"rounded-full w-30 h-30 object-cover transition-transform duration-300 hover:scale-105\"/>\u001b[22m\n\u001b[2m       - unexpected value \"hidden\"\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:66:32",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 32,
                          "line": 66
                        },
                        "snippet": "  64 |     // Check desktop profile image\n  65 |     const desktopImage = page.locator('picture.hidden.sm\\\\:block img');\n> 66 |     await expect(desktopImage).toBeVisible();\n     |                                ^\n  67 |     await expect(desktopImage).toHaveAttribute('alt', /Photo de profil de Maxime BELLET/);\n  68 |     \n  69 |     // For mobile, we'd need to change viewport"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 32,
                            "line": 66
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('picture.hidden.sm\\\\:block img')\nExpected: visible\nReceived: hidden\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('picture.hidden.sm\\\\:block img')\u001b[22m\n\u001b[2m    2 × locator resolved to <img width=\"120\" height=\"120\" loading=\"eager\" src=\"./images/profile.jpg\" data-astro-source-loc=\"263:10\" alt=\"Photo de profil de Maxime BELLET, Ingénieur DevSecOps SRE\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\" class=\"rounded-full w-30 h-30 object-cover transition-transform duration-300 hover:scale-105\"/>\u001b[22m\n\u001b[2m      - unexpected value \"hidden\"\u001b[22m\n\u001b[2m    12 × locator resolved to <img width=\"120\" height=\"120\" loading=\"eager\" src=\"./images/profile.jpg\" alt=\"Photo de profil de Maxime BELLET, Ingénieur DevSecOps SRE\" class=\"rounded-full w-30 h-30 object-cover transition-transform duration-300 hover:scale-105\"/>\u001b[22m\n\u001b[2m       - unexpected value \"hidden\"\u001b[22m\n\n\n  64 |     // Check desktop profile image\n  65 |     const desktopImage = page.locator('picture.hidden.sm\\\\:block img');\n> 66 |     await expect(desktopImage).toBeVisible();\n     |                                ^\n  67 |     await expect(desktopImage).toHaveAttribute('alt', /Photo de profil de Maxime BELLET/);\n  68 |     \n  69 |     // For mobile, we'd need to change viewport\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:66:32"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:06.765Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-display-profile-image-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-display-profile-image-Mobile-Chrome/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-display-profile-image-Mobile-Chrome/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 32,
                        "line": 66
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-6f00627a5a981fa59cc8",
              "file": "cv.spec.ts",
              "line": 63,
              "column": 3
            },
            {
              "title": "should have proper accessibility features",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 28,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 468,
                      "error": {
                        "message": "Error: expect: Property 'toBeInDOM' not found.",
                        "stack": "Error: expect: Property 'toBeInDOM' not found.\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:78:27",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 27,
                          "line": 78
                        },
                        "snippet": "  76 |     // Check skip link\n  77 |     const skipLink = page.getByRole('link', { name: 'Aller au contenu principal' });\n> 78 |     await expect(skipLink).toBeInDOM();\n     |                           ^\n  79 |     \n  80 |     // Check main landmark\n  81 |     await expect(page.getByRole('main')).toBeVisible();"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 27,
                            "line": 78
                          },
                          "message": "Error: expect: Property 'toBeInDOM' not found.\n\n  76 |     // Check skip link\n  77 |     const skipLink = page.getByRole('link', { name: 'Aller au contenu principal' });\n> 78 |     await expect(skipLink).toBeInDOM();\n     |                           ^\n  79 |     \n  80 |     // Check main landmark\n  81 |     await expect(page.getByRole('main')).toBeVisible();\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:78:27"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:07.350Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-shou-72a6c-oper-accessibility-features-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-shou-72a6c-oper-accessibility-features-Mobile-Chrome/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-shou-72a6c-oper-accessibility-features-Mobile-Chrome/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 27,
                        "line": 78
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-2d3b90dea897155d71e7",
              "file": "cv.spec.ts",
              "line": 75,
              "column": 3
            },
            {
              "title": "should be responsive",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 29,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 759,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:08.449Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-db74642d095f5151f0eb",
              "file": "cv.spec.ts",
              "line": 89,
              "column": 3
            },
            {
              "title": "should have working external links",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 29,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 514,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:09.270Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-c403567c0a8f53626734",
              "file": "cv.spec.ts",
              "line": 103,
              "column": 3
            },
            {
              "title": "should load performance assets",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 29,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 389,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:124:20",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 20,
                          "line": 124
                        },
                        "snippet": "  122 |       return link ? true : false;\n  123 |     });\n> 124 |     expect(styles).toBeTruthy();\n      |                    ^\n  125 |     \n  126 |     // Check that images have proper attributes\n  127 |     const images = page.locator('img');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 20,
                            "line": 124
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  122 |       return link ? true : false;\n  123 |     });\n> 124 |     expect(styles).toBeTruthy();\n      |                    ^\n  125 |     \n  126 |     // Check that images have proper attributes\n  127 |     const images = page.locator('img');\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:124:20"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:09.788Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-load-performance-assets-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-load-performance-assets-Mobile-Chrome/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-load-performance-assets-Mobile-Chrome/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 20,
                        "line": 124
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-784a104601563cddd308",
              "file": "cv.spec.ts",
              "line": 118,
              "column": 3
            },
            {
              "title": "should load the main page correctly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 32,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 731,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:12.334Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-144a57c518517f599ba4",
              "file": "cv.spec.ts",
              "line": 8,
              "column": 3
            },
            {
              "title": "should display contact information",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 33,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 1882,
                      "error": {
                        "message": "Error: expect.toBeVisible: Error: strict mode violation: getByText('Lyon') resolved to 5 elements:\n    1) <span data-astro-source-loc=\"297:23\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('banner').getByText('Lyon')\n    2) <p>Ingénieur diplômé de CPE Lyon en Informatique et …</p> aka getByText('Ingénieur diplômé de CPE Lyon')\n    3) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('article').filter({ hasText: 'Intégrateur Applicatif' }).locator('span')\n    4) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('paragraph').filter({ hasText: '- 2023 | Lyon' }).locator('span')\n    5) <h3 data-astro-source-loc=\"442:79\" class=\"text-lg font-semibold text-[var(--color-primary)]\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">CPE Lyon</h3> aka getByRole('heading', { name: 'CPE Lyon' })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByText('Lyon')\u001b[22m\n",
                        "stack": "Error: expect.toBeVisible: Error: strict mode violation: getByText('Lyon') resolved to 5 elements:\n    1) <span data-astro-source-loc=\"297:23\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('banner').getByText('Lyon')\n    2) <p>Ingénieur diplômé de CPE Lyon en Informatique et …</p> aka getByText('Ingénieur diplômé de CPE Lyon')\n    3) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('article').filter({ hasText: 'Intégrateur Applicatif' }).locator('span')\n    4) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('paragraph').filter({ hasText: '- 2023 | Lyon' }).locator('span')\n    5) <h3 data-astro-source-loc=\"442:79\" class=\"text-lg font-semibold text-[var(--color-primary)]\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">CPE Lyon</h3> aka getByRole('heading', { name: 'CPE Lyon' })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByText('Lyon')\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:27:42",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 42,
                          "line": 27
                        },
                        "snippet": "  25 |     \n  26 |     // Check location\n> 27 |     await expect(page.getByText('Lyon')).toBeVisible();\n     |                                          ^\n  28 |   });\n  29 |\n  30 |   test('should display all sections when visible', async ({ page }) => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 42,
                            "line": 27
                          },
                          "message": "Error: expect.toBeVisible: Error: strict mode violation: getByText('Lyon') resolved to 5 elements:\n    1) <span data-astro-source-loc=\"297:23\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('banner').getByText('Lyon')\n    2) <p>Ingénieur diplômé de CPE Lyon en Informatique et …</p> aka getByText('Ingénieur diplômé de CPE Lyon')\n    3) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('article').filter({ hasText: 'Intégrateur Applicatif' }).locator('span')\n    4) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('paragraph').filter({ hasText: '- 2023 | Lyon' }).locator('span')\n    5) <h3 data-astro-source-loc=\"442:79\" class=\"text-lg font-semibold text-[var(--color-primary)]\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">CPE Lyon</h3> aka getByRole('heading', { name: 'CPE Lyon' })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByText('Lyon')\u001b[22m\n\n\n  25 |     \n  26 |     // Check location\n> 27 |     await expect(page.getByText('Lyon')).toBeVisible();\n     |                                          ^\n  28 |   });\n  29 |\n  30 |   test('should display all sections when visible', async ({ page }) => {\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:27:42"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:13.265Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-display-contact-information-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-display-contact-information-Mobile-Safari/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-display-contact-information-Mobile-Safari/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 42,
                        "line": 27
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-ace07d98206b4663206c",
              "file": "cv.spec.ts",
              "line": 19,
              "column": 3
            },
            {
              "title": "should display all sections when visible",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 32,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 929,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:13.176Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-d1e02877b398bdaf6220",
              "file": "cv.spec.ts",
              "line": 30,
              "column": 3
            },
            {
              "title": "should have working dark mode toggle",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 34,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 11024,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('button', { name: /Mode/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('button', { name: /Mode/ })\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('button', { name: /Mode/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('button', { name: /Mode/ })\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:41:31",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 31,
                          "line": 41
                        },
                        "snippet": "  39 |   test('should have working dark mode toggle', async ({ page }) => {\n  40 |     const themeButton = page.getByRole('button', { name: /Mode/ });\n> 41 |     await expect(themeButton).toBeVisible();\n     |                               ^\n  42 |     \n  43 |     // Check initial state (should be light mode)\n  44 |     const body = page.locator('body');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 31,
                            "line": 41
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('button', { name: /Mode/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('button', { name: /Mode/ })\u001b[22m\n\n\n  39 |   test('should have working dark mode toggle', async ({ page }) => {\n  40 |     const themeButton = page.getByRole('button', { name: /Mode/ });\n> 41 |     await expect(themeButton).toBeVisible();\n     |                               ^\n  42 |     \n  43 |     // Check initial state (should be light mode)\n  44 |     const body = page.locator('body');\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:41:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:14.362Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-dark-mode-toggle-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-dark-mode-toggle-Mobile-Safari/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-dark-mode-toggle-Mobile-Safari/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 31,
                        "line": 41
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-c586004fa9d12c27ce34",
              "file": "cv.spec.ts",
              "line": 39,
              "column": 3
            },
            {
              "title": "should have working CV download link",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 32,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 11065,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('link', { name: /Télécharger CV/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('link', { name: /Télécharger CV/ })\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('link', { name: /Télécharger CV/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('link', { name: /Télécharger CV/ })\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:58:32",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 32,
                          "line": 58
                        },
                        "snippet": "  56 |   test('should have working CV download link', async ({ page }) => {\n  57 |     const downloadLink = page.getByRole('link', { name: /Télécharger CV/ });\n> 58 |     await expect(downloadLink).toBeVisible();\n     |                                ^\n  59 |     await expect(downloadLink).toHaveAttribute('href', './cv.pdf');\n  60 |     await expect(downloadLink).toHaveAttribute('target', '_blank');\n  61 |   });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 32,
                            "line": 58
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('link', { name: /Télécharger CV/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('link', { name: /Télécharger CV/ })\u001b[22m\n\n\n  56 |   test('should have working CV download link', async ({ page }) => {\n  57 |     const downloadLink = page.getByRole('link', { name: /Télécharger CV/ });\n> 58 |     await expect(downloadLink).toBeVisible();\n     |                                ^\n  59 |     await expect(downloadLink).toHaveAttribute('href', './cv.pdf');\n  60 |     await expect(downloadLink).toHaveAttribute('target', '_blank');\n  61 |   });\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:58:32"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:14.109Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-CV-download-link-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-CV-download-link-Mobile-Safari/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-CV-download-link-Mobile-Safari/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 32,
                        "line": 58
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-25fc15ed395a3adcd316",
              "file": "cv.spec.ts",
              "line": 56,
              "column": 3
            },
            {
              "title": "should display profile image",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 35,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 11144,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('picture.hidden.sm\\\\:block img')\nExpected: visible\nReceived: hidden\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('picture.hidden.sm\\\\:block img')\u001b[22m\n\u001b[2m    14 × locator resolved to <img width=\"120\" height=\"120\" loading=\"eager\" src=\"./images/profile.jpg\" data-astro-source-loc=\"263:10\" alt=\"Photo de profil de Maxime BELLET, Ingénieur DevSecOps SRE\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\" class=\"rounded-full w-30 h-30 object-cover transition-transform duration-300 hover:scale-105\"/>\u001b[22m\n\u001b[2m       - unexpected value \"hidden\"\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('picture.hidden.sm\\\\:block img')\nExpected: visible\nReceived: hidden\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('picture.hidden.sm\\\\:block img')\u001b[22m\n\u001b[2m    14 × locator resolved to <img width=\"120\" height=\"120\" loading=\"eager\" src=\"./images/profile.jpg\" data-astro-source-loc=\"263:10\" alt=\"Photo de profil de Maxime BELLET, Ingénieur DevSecOps SRE\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\" class=\"rounded-full w-30 h-30 object-cover transition-transform duration-300 hover:scale-105\"/>\u001b[22m\n\u001b[2m       - unexpected value \"hidden\"\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:66:32",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 32,
                          "line": 66
                        },
                        "snippet": "  64 |     // Check desktop profile image\n  65 |     const desktopImage = page.locator('picture.hidden.sm\\\\:block img');\n> 66 |     await expect(desktopImage).toBeVisible();\n     |                                ^\n  67 |     await expect(desktopImage).toHaveAttribute('alt', /Photo de profil de Maxime BELLET/);\n  68 |     \n  69 |     // For mobile, we'd need to change viewport"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 32,
                            "line": 66
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: locator('picture.hidden.sm\\\\:block img')\nExpected: visible\nReceived: hidden\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('picture.hidden.sm\\\\:block img')\u001b[22m\n\u001b[2m    14 × locator resolved to <img width=\"120\" height=\"120\" loading=\"eager\" src=\"./images/profile.jpg\" data-astro-source-loc=\"263:10\" alt=\"Photo de profil de Maxime BELLET, Ingénieur DevSecOps SRE\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\" class=\"rounded-full w-30 h-30 object-cover transition-transform duration-300 hover:scale-105\"/>\u001b[22m\n\u001b[2m       - unexpected value \"hidden\"\u001b[22m\n\n\n  64 |     // Check desktop profile image\n  65 |     const desktopImage = page.locator('picture.hidden.sm\\\\:block img');\n> 66 |     await expect(desktopImage).toBeVisible();\n     |                                ^\n  67 |     await expect(desktopImage).toHaveAttribute('alt', /Photo de profil de Maxime BELLET/);\n  68 |     \n  69 |     // For mobile, we'd need to change viewport\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:66:32"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:15.814Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-display-profile-image-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-display-profile-image-Mobile-Safari/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-display-profile-image-Mobile-Safari/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 32,
                        "line": 66
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-0e8fc357ba66625f3f01",
              "file": "cv.spec.ts",
              "line": 63,
              "column": 3
            },
            {
              "title": "should have proper accessibility features",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 36,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 731,
                      "error": {
                        "message": "Error: expect: Property 'toBeInDOM' not found.",
                        "stack": "Error: expect: Property 'toBeInDOM' not found.\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:78:27",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 27,
                          "line": 78
                        },
                        "snippet": "  76 |     // Check skip link\n  77 |     const skipLink = page.getByRole('link', { name: 'Aller au contenu principal' });\n> 78 |     await expect(skipLink).toBeInDOM();\n     |                           ^\n  79 |     \n  80 |     // Check main landmark\n  81 |     await expect(page.getByRole('main')).toBeVisible();"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 27,
                            "line": 78
                          },
                          "message": "Error: expect: Property 'toBeInDOM' not found.\n\n  76 |     // Check skip link\n  77 |     const skipLink = page.getByRole('link', { name: 'Aller au contenu principal' });\n> 78 |     await expect(skipLink).toBeInDOM();\n     |                           ^\n  79 |     \n  80 |     // Check main landmark\n  81 |     await expect(page.getByRole('main')).toBeVisible();\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:78:27"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:18.223Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-shou-72a6c-oper-accessibility-features-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-shou-72a6c-oper-accessibility-features-Mobile-Safari/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-shou-72a6c-oper-accessibility-features-Mobile-Safari/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 27,
                        "line": 78
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-ded0e325f43694479ed2",
              "file": "cv.spec.ts",
              "line": 75,
              "column": 3
            },
            {
              "title": "should be responsive",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 37,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 1348,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:19.861Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-a9c55055745324dba651",
              "file": "cv.spec.ts",
              "line": 89,
              "column": 3
            },
            {
              "title": "should have working external links",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 37,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 714,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:21.275Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-3d14d1dba068b7482076",
              "file": "cv.spec.ts",
              "line": 103,
              "column": 3
            },
            {
              "title": "should load performance assets",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 38,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 937,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:124:20",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 20,
                          "line": 124
                        },
                        "snippet": "  122 |       return link ? true : false;\n  123 |     });\n> 124 |     expect(styles).toBeTruthy();\n      |                    ^\n  125 |     \n  126 |     // Check that images have proper attributes\n  127 |     const images = page.locator('img');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 20,
                            "line": 124
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  122 |       return link ? true : false;\n  123 |     });\n> 124 |     expect(styles).toBeTruthy();\n      |                    ^\n  125 |     \n  126 |     // Check that images have proper attributes\n  127 |     const images = page.locator('img');\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:124:20"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:22.062Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-load-performance-assets-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-load-performance-assets-Mobile-Safari/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-load-performance-assets-Mobile-Safari/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 20,
                        "line": 124
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-8061589f05682d97950a",
              "file": "cv.spec.ts",
              "line": 118,
              "column": 3
            },
            {
              "title": "should load the main page correctly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Tablet",
                  "projectName": "Tablet",
                  "results": [
                    {
                      "workerIndex": 40,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 424,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:25.766Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-6349fa7efca8ffd30ac2",
              "file": "cv.spec.ts",
              "line": 8,
              "column": 3
            },
            {
              "title": "should display contact information",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Tablet",
                  "projectName": "Tablet",
                  "results": [
                    {
                      "workerIndex": 41,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 486,
                      "error": {
                        "message": "Error: expect.toBeVisible: Error: strict mode violation: getByText('Lyon') resolved to 5 elements:\n    1) <span data-astro-source-loc=\"297:23\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('banner').getByText('Lyon')\n    2) <p>Ingénieur diplômé de CPE Lyon en Informatique et …</p> aka getByText('Ingénieur diplômé de CPE Lyon')\n    3) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('article').filter({ hasText: 'Intégrateur Applicatif' }).locator('span')\n    4) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('paragraph').filter({ hasText: '- 2023 | Lyon' }).locator('span')\n    5) <h3 data-astro-source-loc=\"442:79\" class=\"text-lg font-semibold text-[var(--color-primary)]\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">CPE Lyon</h3> aka getByRole('heading', { name: 'CPE Lyon' })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByText('Lyon')\u001b[22m\n",
                        "stack": "Error: expect.toBeVisible: Error: strict mode violation: getByText('Lyon') resolved to 5 elements:\n    1) <span data-astro-source-loc=\"297:23\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('banner').getByText('Lyon')\n    2) <p>Ingénieur diplômé de CPE Lyon en Informatique et …</p> aka getByText('Ingénieur diplômé de CPE Lyon')\n    3) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('article').filter({ hasText: 'Intégrateur Applicatif' }).locator('span')\n    4) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('paragraph').filter({ hasText: '- 2023 | Lyon' }).locator('span')\n    5) <h3 data-astro-source-loc=\"442:79\" class=\"text-lg font-semibold text-[var(--color-primary)]\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">CPE Lyon</h3> aka getByRole('heading', { name: 'CPE Lyon' })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByText('Lyon')\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:27:42",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 42,
                          "line": 27
                        },
                        "snippet": "  25 |     \n  26 |     // Check location\n> 27 |     await expect(page.getByText('Lyon')).toBeVisible();\n     |                                          ^\n  28 |   });\n  29 |\n  30 |   test('should display all sections when visible', async ({ page }) => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 42,
                            "line": 27
                          },
                          "message": "Error: expect.toBeVisible: Error: strict mode violation: getByText('Lyon') resolved to 5 elements:\n    1) <span data-astro-source-loc=\"297:23\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('banner').getByText('Lyon')\n    2) <p>Ingénieur diplômé de CPE Lyon en Informatique et …</p> aka getByText('Ingénieur diplômé de CPE Lyon')\n    3) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('article').filter({ hasText: 'Intégrateur Applicatif' }).locator('span')\n    4) <span data-astro-source-loc=\"427:71\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">Lyon</span> aka getByRole('paragraph').filter({ hasText: '- 2023 | Lyon' }).locator('span')\n    5) <h3 data-astro-source-loc=\"442:79\" class=\"text-lg font-semibold text-[var(--color-primary)]\" data-astro-source-file=\"/home/tellebma/DEV/cv/src/pages/index.astro\">CPE Lyon</h3> aka getByRole('heading', { name: 'CPE Lyon' })\n\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByText('Lyon')\u001b[22m\n\n\n  25 |     \n  26 |     // Check location\n> 27 |     await expect(page.getByText('Lyon')).toBeVisible();\n     |                                          ^\n  28 |   });\n  29 |\n  30 |   test('should display all sections when visible', async ({ page }) => {\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:27:42"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:26.005Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-display-contact-information-Tablet/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-display-contact-information-Tablet/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-display-contact-information-Tablet/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 42,
                        "line": 27
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-d44112c2017383c3de1c",
              "file": "cv.spec.ts",
              "line": 19,
              "column": 3
            },
            {
              "title": "should display all sections when visible",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Tablet",
                  "projectName": "Tablet",
                  "results": [
                    {
                      "workerIndex": 42,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 455,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:26.016Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-cd758869c292f4a8e008",
              "file": "cv.spec.ts",
              "line": 30,
              "column": 3
            },
            {
              "title": "should have working dark mode toggle",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Tablet",
                  "projectName": "Tablet",
                  "results": [
                    {
                      "workerIndex": 40,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 10999,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('button', { name: /Mode/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('button', { name: /Mode/ })\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('button', { name: /Mode/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('button', { name: /Mode/ })\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:41:31",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 31,
                          "line": 41
                        },
                        "snippet": "  39 |   test('should have working dark mode toggle', async ({ page }) => {\n  40 |     const themeButton = page.getByRole('button', { name: /Mode/ });\n> 41 |     await expect(themeButton).toBeVisible();\n     |                               ^\n  42 |     \n  43 |     // Check initial state (should be light mode)\n  44 |     const body = page.locator('body');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 31,
                            "line": 41
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('button', { name: /Mode/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('button', { name: /Mode/ })\u001b[22m\n\n\n  39 |   test('should have working dark mode toggle', async ({ page }) => {\n  40 |     const themeButton = page.getByRole('button', { name: /Mode/ });\n> 41 |     await expect(themeButton).toBeVisible();\n     |                               ^\n  42 |     \n  43 |     // Check initial state (should be light mode)\n  44 |     const body = page.locator('body');\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:41:31"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:26.247Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-dark-mode-toggle-Tablet/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-dark-mode-toggle-Tablet/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-dark-mode-toggle-Tablet/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 31,
                        "line": 41
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-232e43396f37f69645c5",
              "file": "cv.spec.ts",
              "line": 39,
              "column": 3
            },
            {
              "title": "should have working CV download link",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Tablet",
                  "projectName": "Tablet",
                  "results": [
                    {
                      "workerIndex": 42,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 11091,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('link', { name: /Télécharger CV/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('link', { name: /Télécharger CV/ })\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('link', { name: /Télécharger CV/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('link', { name: /Télécharger CV/ })\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:58:32",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 32,
                          "line": 58
                        },
                        "snippet": "  56 |   test('should have working CV download link', async ({ page }) => {\n  57 |     const downloadLink = page.getByRole('link', { name: /Télécharger CV/ });\n> 58 |     await expect(downloadLink).toBeVisible();\n     |                                ^\n  59 |     await expect(downloadLink).toHaveAttribute('href', './cv.pdf');\n  60 |     await expect(downloadLink).toHaveAttribute('target', '_blank');\n  61 |   });"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 32,
                            "line": 58
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoBeVisible\u001b[2m()\u001b[22m\n\nLocator: getByRole('link', { name: /Télécharger CV/ })\nExpected: visible\nReceived: <element(s) not found>\nCall log:\n\u001b[2m  - Expect \"toBeVisible\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for getByRole('link', { name: /Télécharger CV/ })\u001b[22m\n\n\n  56 |   test('should have working CV download link', async ({ page }) => {\n  57 |     const downloadLink = page.getByRole('link', { name: /Télécharger CV/ });\n> 58 |     await expect(downloadLink).toBeVisible();\n     |                                ^\n  59 |     await expect(downloadLink).toHaveAttribute('href', './cv.pdf');\n  60 |     await expect(downloadLink).toHaveAttribute('target', '_blank');\n  61 |   });\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:58:32"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:26.540Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-CV-download-link-Tablet/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-CV-download-link-Tablet/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-have-working-CV-download-link-Tablet/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 32,
                        "line": 58
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-a72abd5d8a60f771220d",
              "file": "cv.spec.ts",
              "line": 56,
              "column": 3
            },
            {
              "title": "should display profile image",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Tablet",
                  "projectName": "Tablet",
                  "results": [
                    {
                      "workerIndex": 43,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 368,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:27.202Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-53b8dee113931e69f422",
              "file": "cv.spec.ts",
              "line": 63,
              "column": 3
            },
            {
              "title": "should have proper accessibility features",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Tablet",
                  "projectName": "Tablet",
                  "results": [
                    {
                      "workerIndex": 44,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 339,
                      "error": {
                        "message": "Error: expect: Property 'toBeInDOM' not found.",
                        "stack": "Error: expect: Property 'toBeInDOM' not found.\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:78:27",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 27,
                          "line": 78
                        },
                        "snippet": "  76 |     // Check skip link\n  77 |     const skipLink = page.getByRole('link', { name: 'Aller au contenu principal' });\n> 78 |     await expect(skipLink).toBeInDOM();\n     |                           ^\n  79 |     \n  80 |     // Check main landmark\n  81 |     await expect(page.getByRole('main')).toBeVisible();"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 27,
                            "line": 78
                          },
                          "message": "Error: expect: Property 'toBeInDOM' not found.\n\n  76 |     // Check skip link\n  77 |     const skipLink = page.getByRole('link', { name: 'Aller au contenu principal' });\n> 78 |     await expect(skipLink).toBeInDOM();\n     |                           ^\n  79 |     \n  80 |     // Check main landmark\n  81 |     await expect(page.getByRole('main')).toBeVisible();\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:78:27"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:27.179Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-shou-72a6c-oper-accessibility-features-Tablet/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-shou-72a6c-oper-accessibility-features-Tablet/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-shou-72a6c-oper-accessibility-features-Tablet/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 27,
                        "line": 78
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-3ecea1c8beeadb11f6b1",
              "file": "cv.spec.ts",
              "line": 75,
              "column": 3
            },
            {
              "title": "should be responsive",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Tablet",
                  "projectName": "Tablet",
                  "results": [
                    {
                      "workerIndex": 45,
                      "parallelIndex": 5,
                      "status": "passed",
                      "duration": 430,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:27.599Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-ef7c1d6584f5999cca80",
              "file": "cv.spec.ts",
              "line": 89,
              "column": 3
            },
            {
              "title": "should have working external links",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Tablet",
                  "projectName": "Tablet",
                  "results": [
                    {
                      "workerIndex": 46,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 389,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:28.156Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-26694b9b9bae39af0a0d",
              "file": "cv.spec.ts",
              "line": 103,
              "column": 3
            },
            {
              "title": "should load performance assets",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Tablet",
                  "projectName": "Tablet",
                  "results": [
                    {
                      "workerIndex": 43,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 394,
                      "error": {
                        "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m",
                        "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:124:20",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 20,
                          "line": 124
                        },
                        "snippet": "  122 |       return link ? true : false;\n  123 |     });\n> 124 |     expect(styles).toBeTruthy();\n      |                    ^\n  125 |     \n  126 |     // Check that images have proper attributes\n  127 |     const images = page.locator('img');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 20,
                            "line": 124
                          },
                          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mfalse\u001b[39m\n\n  122 |       return link ? true : false;\n  123 |     });\n> 124 |     expect(styles).toBeTruthy();\n      |                    ^\n  125 |     \n  126 |     // Check that images have proper attributes\n  127 |     const images = page.locator('img');\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:124:20"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:27.624Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-load-performance-assets-Tablet/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-load-performance-assets-Tablet/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-CV---Maxime-BELLET-should-load-performance-assets-Tablet/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 20,
                        "line": 124
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-56813d0ad8001d5787a0",
              "file": "cv.spec.ts",
              "line": 118,
              "column": 3
            }
          ]
        },
        {
          "title": "SEO and Meta tags",
          "file": "cv.spec.ts",
          "line": 136,
          "column": 6,
          "specs": [
            {
              "title": "should have proper meta tags",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 5,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 10930,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator('meta[name=\"description\"]')\nExpected pattern: \u001b[32m/CV de Maxime BELLET/\u001b[39m\nReceived string:  \u001b[31m\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[39m\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('meta[name=\"description\"]')\u001b[22m\n\u001b[2m    14 × locator resolved to <meta name=\"description\" content=\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"/>\u001b[22m\n\u001b[2m       - unexpected value \"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator('meta[name=\"description\"]')\nExpected pattern: \u001b[32m/CV de Maxime BELLET/\u001b[39m\nReceived string:  \u001b[31m\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[39m\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('meta[name=\"description\"]')\u001b[22m\n\u001b[2m    14 × locator resolved to <meta name=\"description\" content=\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"/>\u001b[22m\n\u001b[2m       - unexpected value \"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:142:35",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 35,
                          "line": 142
                        },
                        "snippet": "  140 |     // Check meta description\n  141 |     const metaDescription = page.locator('meta[name=\"description\"]');\n> 142 |     await expect(metaDescription).toHaveAttribute('content', /CV de Maxime BELLET/);\n      |                                   ^\n  143 |     \n  144 |     // Check Open Graph tags\n  145 |     await expect(page.locator('meta[property=\"og:title\"]')).toHaveAttribute('content', /Maxime BELLET/);"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 35,
                            "line": 142
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator('meta[name=\"description\"]')\nExpected pattern: \u001b[32m/CV de Maxime BELLET/\u001b[39m\nReceived string:  \u001b[31m\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[39m\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('meta[name=\"description\"]')\u001b[22m\n\u001b[2m    14 × locator resolved to <meta name=\"description\" content=\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"/>\u001b[22m\n\u001b[2m       - unexpected value \"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[22m\n\n\n  140 |     // Check meta description\n  141 |     const metaDescription = page.locator('meta[name=\"description\"]');\n> 142 |     await expect(metaDescription).toHaveAttribute('content', /CV de Maxime BELLET/);\n      |                                   ^\n  143 |     \n  144 |     // Check Open Graph tags\n  145 |     await expect(page.locator('meta[property=\"og:title\"]')).toHaveAttribute('content', /Maxime BELLET/);\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:142:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:38.352Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-SEO-and-Meta-tags-should-have-proper-meta-tags-chromium/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-SEO-and-Meta-tags-should-have-proper-meta-tags-chromium/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-SEO-and-Meta-tags-should-have-proper-meta-tags-chromium/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 35,
                        "line": 142
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-7a6bef3adf5911866e3a",
              "file": "cv.spec.ts",
              "line": 137,
              "column": 3
            },
            {
              "title": "should have proper meta tags",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 12,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 10548,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator('meta[name=\"description\"]')\nExpected pattern: \u001b[32m/CV de Maxime BELLET/\u001b[39m\nReceived string:  \u001b[31m\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[39m\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('meta[name=\"description\"]')\u001b[22m\n\u001b[2m    14 × locator resolved to <meta name=\"description\" content=\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"/>\u001b[22m\n\u001b[2m       - unexpected value \"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator('meta[name=\"description\"]')\nExpected pattern: \u001b[32m/CV de Maxime BELLET/\u001b[39m\nReceived string:  \u001b[31m\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[39m\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('meta[name=\"description\"]')\u001b[22m\n\u001b[2m    14 × locator resolved to <meta name=\"description\" content=\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"/>\u001b[22m\n\u001b[2m       - unexpected value \"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:142:35",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 35,
                          "line": 142
                        },
                        "snippet": "  140 |     // Check meta description\n  141 |     const metaDescription = page.locator('meta[name=\"description\"]');\n> 142 |     await expect(metaDescription).toHaveAttribute('content', /CV de Maxime BELLET/);\n      |                                   ^\n  143 |     \n  144 |     // Check Open Graph tags\n  145 |     await expect(page.locator('meta[property=\"og:title\"]')).toHaveAttribute('content', /Maxime BELLET/);"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 35,
                            "line": 142
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator('meta[name=\"description\"]')\nExpected pattern: \u001b[32m/CV de Maxime BELLET/\u001b[39m\nReceived string:  \u001b[31m\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[39m\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('meta[name=\"description\"]')\u001b[22m\n\u001b[2m    14 × locator resolved to <meta name=\"description\" content=\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"/>\u001b[22m\n\u001b[2m       - unexpected value \"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[22m\n\n\n  140 |     // Check meta description\n  141 |     const metaDescription = page.locator('meta[name=\"description\"]');\n> 142 |     await expect(metaDescription).toHaveAttribute('content', /CV de Maxime BELLET/);\n      |                                   ^\n  143 |     \n  144 |     // Check Open Graph tags\n  145 |     await expect(page.locator('meta[property=\"og:title\"]')).toHaveAttribute('content', /Maxime BELLET/);\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:142:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:48.755Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-SEO-and-Meta-tags-should-have-proper-meta-tags-firefox/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-SEO-and-Meta-tags-should-have-proper-meta-tags-firefox/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-SEO-and-Meta-tags-should-have-proper-meta-tags-firefox/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 35,
                        "line": 142
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-da7636d611cf81aa5783",
              "file": "cv.spec.ts",
              "line": 137,
              "column": 3
            },
            {
              "title": "should have proper meta tags",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 16,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 11776,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator('meta[name=\"description\"]')\nExpected pattern: \u001b[32m/CV de Maxime BELLET/\u001b[39m\nReceived string:  \u001b[31m\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[39m\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('meta[name=\"description\"]')\u001b[22m\n\u001b[2m    14 × locator resolved to <meta name=\"description\" content=\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"/>\u001b[22m\n\u001b[2m       - unexpected value \"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator('meta[name=\"description\"]')\nExpected pattern: \u001b[32m/CV de Maxime BELLET/\u001b[39m\nReceived string:  \u001b[31m\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[39m\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('meta[name=\"description\"]')\u001b[22m\n\u001b[2m    14 × locator resolved to <meta name=\"description\" content=\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"/>\u001b[22m\n\u001b[2m       - unexpected value \"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:142:35",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 35,
                          "line": 142
                        },
                        "snippet": "  140 |     // Check meta description\n  141 |     const metaDescription = page.locator('meta[name=\"description\"]');\n> 142 |     await expect(metaDescription).toHaveAttribute('content', /CV de Maxime BELLET/);\n      |                                   ^\n  143 |     \n  144 |     // Check Open Graph tags\n  145 |     await expect(page.locator('meta[property=\"og:title\"]')).toHaveAttribute('content', /Maxime BELLET/);"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 35,
                            "line": 142
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator('meta[name=\"description\"]')\nExpected pattern: \u001b[32m/CV de Maxime BELLET/\u001b[39m\nReceived string:  \u001b[31m\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[39m\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('meta[name=\"description\"]')\u001b[22m\n\u001b[2m    14 × locator resolved to <meta name=\"description\" content=\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"/>\u001b[22m\n\u001b[2m       - unexpected value \"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[22m\n\n\n  140 |     // Check meta description\n  141 |     const metaDescription = page.locator('meta[name=\"description\"]');\n> 142 |     await expect(metaDescription).toHaveAttribute('content', /CV de Maxime BELLET/);\n      |                                   ^\n  143 |     \n  144 |     // Check Open Graph tags\n  145 |     await expect(page.locator('meta[property=\"og:title\"]')).toHaveAttribute('content', /Maxime BELLET/);\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:142:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:58.094Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-SEO-and-Meta-tags-should-have-proper-meta-tags-webkit/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-SEO-and-Meta-tags-should-have-proper-meta-tags-webkit/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-SEO-and-Meta-tags-should-have-proper-meta-tags-webkit/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 35,
                        "line": 142
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-e57e04fd654091711fa6",
              "file": "cv.spec.ts",
              "line": 137,
              "column": 3
            },
            {
              "title": "should have proper meta tags",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 30,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 10885,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator('meta[name=\"description\"]')\nExpected pattern: \u001b[32m/CV de Maxime BELLET/\u001b[39m\nReceived string:  \u001b[31m\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[39m\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('meta[name=\"description\"]')\u001b[22m\n\u001b[2m    14 × locator resolved to <meta name=\"description\" content=\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"/>\u001b[22m\n\u001b[2m       - unexpected value \"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator('meta[name=\"description\"]')\nExpected pattern: \u001b[32m/CV de Maxime BELLET/\u001b[39m\nReceived string:  \u001b[31m\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[39m\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('meta[name=\"description\"]')\u001b[22m\n\u001b[2m    14 × locator resolved to <meta name=\"description\" content=\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"/>\u001b[22m\n\u001b[2m       - unexpected value \"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:142:35",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 35,
                          "line": 142
                        },
                        "snippet": "  140 |     // Check meta description\n  141 |     const metaDescription = page.locator('meta[name=\"description\"]');\n> 142 |     await expect(metaDescription).toHaveAttribute('content', /CV de Maxime BELLET/);\n      |                                   ^\n  143 |     \n  144 |     // Check Open Graph tags\n  145 |     await expect(page.locator('meta[property=\"og:title\"]')).toHaveAttribute('content', /Maxime BELLET/);"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 35,
                            "line": 142
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator('meta[name=\"description\"]')\nExpected pattern: \u001b[32m/CV de Maxime BELLET/\u001b[39m\nReceived string:  \u001b[31m\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[39m\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('meta[name=\"description\"]')\u001b[22m\n\u001b[2m    14 × locator resolved to <meta name=\"description\" content=\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"/>\u001b[22m\n\u001b[2m       - unexpected value \"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[22m\n\n\n  140 |     // Check meta description\n  141 |     const metaDescription = page.locator('meta[name=\"description\"]');\n> 142 |     await expect(metaDescription).toHaveAttribute('content', /CV de Maxime BELLET/);\n      |                                   ^\n  143 |     \n  144 |     // Check Open Graph tags\n  145 |     await expect(page.locator('meta[property=\"og:title\"]')).toHaveAttribute('content', /Maxime BELLET/);\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:142:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:10.440Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-SEO-and-Meta-tags-should-have-proper-meta-tags-Mobile-Chrome/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-SEO-and-Meta-tags-should-have-proper-meta-tags-Mobile-Chrome/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-SEO-and-Meta-tags-should-have-proper-meta-tags-Mobile-Chrome/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 35,
                        "line": 142
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-9600958ef81020746ddd",
              "file": "cv.spec.ts",
              "line": 137,
              "column": 3
            },
            {
              "title": "should have proper meta tags",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 37,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 11053,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator('meta[name=\"description\"]')\nExpected pattern: \u001b[32m/CV de Maxime BELLET/\u001b[39m\nReceived string:  \u001b[31m\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[39m\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('meta[name=\"description\"]')\u001b[22m\n\u001b[2m    14 × locator resolved to <meta name=\"description\" content=\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"/>\u001b[22m\n\u001b[2m       - unexpected value \"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator('meta[name=\"description\"]')\nExpected pattern: \u001b[32m/CV de Maxime BELLET/\u001b[39m\nReceived string:  \u001b[31m\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[39m\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('meta[name=\"description\"]')\u001b[22m\n\u001b[2m    14 × locator resolved to <meta name=\"description\" content=\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"/>\u001b[22m\n\u001b[2m       - unexpected value \"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:142:35",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 35,
                          "line": 142
                        },
                        "snippet": "  140 |     // Check meta description\n  141 |     const metaDescription = page.locator('meta[name=\"description\"]');\n> 142 |     await expect(metaDescription).toHaveAttribute('content', /CV de Maxime BELLET/);\n      |                                   ^\n  143 |     \n  144 |     // Check Open Graph tags\n  145 |     await expect(page.locator('meta[property=\"og:title\"]')).toHaveAttribute('content', /Maxime BELLET/);"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 35,
                            "line": 142
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator('meta[name=\"description\"]')\nExpected pattern: \u001b[32m/CV de Maxime BELLET/\u001b[39m\nReceived string:  \u001b[31m\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[39m\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('meta[name=\"description\"]')\u001b[22m\n\u001b[2m    14 × locator resolved to <meta name=\"description\" content=\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"/>\u001b[22m\n\u001b[2m       - unexpected value \"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[22m\n\n\n  140 |     // Check meta description\n  141 |     const metaDescription = page.locator('meta[name=\"description\"]');\n> 142 |     await expect(metaDescription).toHaveAttribute('content', /CV de Maxime BELLET/);\n      |                                   ^\n  143 |     \n  144 |     // Check Open Graph tags\n  145 |     await expect(page.locator('meta[property=\"og:title\"]')).toHaveAttribute('content', /Maxime BELLET/);\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:142:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:21.996Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-SEO-and-Meta-tags-should-have-proper-meta-tags-Mobile-Safari/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-SEO-and-Meta-tags-should-have-proper-meta-tags-Mobile-Safari/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-SEO-and-Meta-tags-should-have-proper-meta-tags-Mobile-Safari/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 35,
                        "line": 142
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-357b57bcd822833c249c",
              "file": "cv.spec.ts",
              "line": 137,
              "column": 3
            },
            {
              "title": "should have proper meta tags",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Tablet",
                  "projectName": "Tablet",
                  "results": [
                    {
                      "workerIndex": 47,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 10749,
                      "error": {
                        "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator('meta[name=\"description\"]')\nExpected pattern: \u001b[32m/CV de Maxime BELLET/\u001b[39m\nReceived string:  \u001b[31m\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[39m\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('meta[name=\"description\"]')\u001b[22m\n\u001b[2m    14 × locator resolved to <meta name=\"description\" content=\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"/>\u001b[22m\n\u001b[2m       - unexpected value \"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[22m\n",
                        "stack": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator('meta[name=\"description\"]')\nExpected pattern: \u001b[32m/CV de Maxime BELLET/\u001b[39m\nReceived string:  \u001b[31m\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[39m\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('meta[name=\"description\"]')\u001b[22m\n\u001b[2m    14 × locator resolved to <meta name=\"description\" content=\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"/>\u001b[22m\n\u001b[2m       - unexpected value \"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[22m\n\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:142:35",
                        "location": {
                          "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                          "column": 35,
                          "line": 142
                        },
                        "snippet": "  140 |     // Check meta description\n  141 |     const metaDescription = page.locator('meta[name=\"description\"]');\n> 142 |     await expect(metaDescription).toHaveAttribute('content', /CV de Maxime BELLET/);\n      |                                   ^\n  143 |     \n  144 |     // Check Open Graph tags\n  145 |     await expect(page.locator('meta[property=\"og:title\"]')).toHaveAttribute('content', /Maxime BELLET/);"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                            "column": 35,
                            "line": 142
                          },
                          "message": "Error: \u001b[31mTimed out 10000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveAttribute\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator('meta[name=\"description\"]')\nExpected pattern: \u001b[32m/CV de Maxime BELLET/\u001b[39m\nReceived string:  \u001b[31m\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[39m\nCall log:\n\u001b[2m  - Expect \"toHaveAttribute\" with timeout 10000ms\u001b[22m\n\u001b[2m  - waiting for locator('meta[name=\"description\"]')\u001b[22m\n\u001b[2m    14 × locator resolved to <meta name=\"description\" content=\"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"/>\u001b[22m\n\u001b[2m       - unexpected value \"CV de {cv.basics.name}, {cv.basics.headline}. Expertise en DevSecOps, SRE et développement. Lyon, France.\"\u001b[22m\n\n\n  140 |     // Check meta description\n  141 |     const metaDescription = page.locator('meta[name=\"description\"]');\n> 142 |     await expect(metaDescription).toHaveAttribute('content', /CV de Maxime BELLET/);\n      |                                   ^\n  143 |     \n  144 |     // Check Open Graph tags\n  145 |     await expect(page.locator('meta[property=\"og:title\"]')).toHaveAttribute('content', /Maxime BELLET/);\n    at /home/tellebma/DEV/cv/tests/cv.spec.ts:142:35"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:28.616Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-SEO-and-Meta-tags-should-have-proper-meta-tags-Tablet/test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-SEO-and-Meta-tags-should-have-proper-meta-tags-Tablet/video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "/home/tellebma/DEV/cv/test-results/cv-SEO-and-Meta-tags-should-have-proper-meta-tags-Tablet/error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "/home/tellebma/DEV/cv/tests/cv.spec.ts",
                        "column": 35,
                        "line": 142
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-b4a5763c015b0f817a32",
              "file": "cv.spec.ts",
              "line": 137,
              "column": 3
            }
          ]
        },
        {
          "title": "PWA Features",
          "file": "cv.spec.ts",
          "line": 154,
          "column": 6,
          "specs": [
            {
              "title": "should have manifest link",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 7,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 340,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:38.920Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-4d07cefbbe3437a62426",
              "file": "cv.spec.ts",
              "line": 155,
              "column": 3
            },
            {
              "title": "should register service worker",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "chromium",
                  "projectName": "chromium",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 255,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:38.403Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-199e33928e3333bfde65",
              "file": "cv.spec.ts",
              "line": 162,
              "column": 3
            },
            {
              "title": "should have manifest link",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 15,
                      "parallelIndex": 5,
                      "status": "passed",
                      "duration": 1656,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:49.881Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-2b70c880c2dbfe709c80",
              "file": "cv.spec.ts",
              "line": 155,
              "column": 3
            },
            {
              "title": "should register service worker",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "firefox",
                  "projectName": "firefox",
                  "results": [
                    {
                      "workerIndex": 13,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 715,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:51.223Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-f532a0235f2bde5f6095",
              "file": "cv.spec.ts",
              "line": 162,
              "column": 3
            },
            {
              "title": "should have manifest link",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 22,
                      "parallelIndex": 5,
                      "status": "passed",
                      "duration": 1013,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:45:59.211Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-3dd236f7df12354ef00a",
              "file": "cv.spec.ts",
              "line": 155,
              "column": 3
            },
            {
              "title": "should register service worker",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "webkit",
                  "projectName": "webkit",
                  "results": [
                    {
                      "workerIndex": 23,
                      "parallelIndex": 1,
                      "status": "passed",
                      "duration": 1044,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:00.251Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-4dbf492c0294122e8a96",
              "file": "cv.spec.ts",
              "line": 162,
              "column": 3
            },
            {
              "title": "should have manifest link",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 31,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 447,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:10.803Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-78a9919670ce9282d603",
              "file": "cv.spec.ts",
              "line": 155,
              "column": 3
            },
            {
              "title": "should register service worker",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Chrome",
                  "projectName": "Mobile Chrome",
                  "results": [
                    {
                      "workerIndex": 31,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 366,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:11.295Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-c633e958c85443ff2ef3",
              "file": "cv.spec.ts",
              "line": 162,
              "column": 3
            },
            {
              "title": "should have manifest link",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 39,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 735,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:23.732Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-d6d04581e6414efd3008",
              "file": "cv.spec.ts",
              "line": 155,
              "column": 3
            },
            {
              "title": "should register service worker",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Mobile Safari",
                  "projectName": "Mobile Safari",
                  "results": [
                    {
                      "workerIndex": 39,
                      "parallelIndex": 4,
                      "status": "passed",
                      "duration": 718,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:24.542Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-6ad610d9024d36202559",
              "file": "cv.spec.ts",
              "line": 162,
              "column": 3
            },
            {
              "title": "should have manifest link",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Tablet",
                  "projectName": "Tablet",
                  "results": [
                    {
                      "workerIndex": 45,
                      "parallelIndex": 5,
                      "status": "passed",
                      "duration": 333,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:28.081Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-241f1cbf9415858f6e1c",
              "file": "cv.spec.ts",
              "line": 155,
              "column": 3
            },
            {
              "title": "should register service worker",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 30000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "Tablet",
                  "projectName": "Tablet",
                  "results": [
                    {
                      "workerIndex": 45,
                      "parallelIndex": 5,
                      "status": "passed",
                      "duration": 282,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-07-01T22:46:28.418Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "da3c3a1ef58ec1969942-49458e9d2eb6f749ba5d",
              "file": "cv.spec.ts",
              "line": 162,
              "column": 3
            }
          ]
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-07-01T22:45:32.737Z",
    "duration": 66709.70999999999,
    "expected": 40,
    "skipped": 0,
    "unexpected": 38,
    "flaky": 0
  }
}